name: Build_x86_64_cswp

# Add a button to trigger the workflow
on: 
  repository_dispatch:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        set +e
        docker rmi `docker images -q`
        echo "Deleting files, please wait ..."
        sudo rm -rf \
          /usr/share/dotnet \
          /etc/mysql \
          /etc/php
        sudo -E apt-get -y purge \
          azure-cli \
          ghc* \
          zulu* \
          hhvm \
          llvm* \
          firefox \
          google* \
          dotnet* \
          powershell \
          openjdk* \
          mysql* \
          php*
        sudo -E apt-get update
        sudo apt full-upgrade -y
        sudo apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3.5 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex quilt uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev xsltproc libxml-parser-perl mercurial bzr ecj cvs texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean

    - name: Clone source code
      env: 
        REPO_URL: https://github.com/coolsnowwolf/lede
        # REPO_URL: https://github.com/Lienol/openwrt
        REPO_BRANCH: master
      run: |
        #git clone -b 21.02 --single-branch $REPO_URL openwrt
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        cd openwrt
        # echo "src-git lienol https://github.com/Lienol/openwrt-package.git;main" >> ./feeds.conf.default
        # echo "src-git other https://github.com/Lienol/openwrt-package.git;other" >> ./feeds.conf.default
        echo "src-git PWpackages https://github.com/xiaorouji/openwrt-passwall.git;packages" >> ./feeds.conf.default
        echo "src-git PWluci https://github.com/xiaorouji/openwrt-passwall.git;luci" >> ./feeds.conf.default
        
    - name: Update & Install feeds
      working-directory: ./openwrt
      run: |
         ./scripts/feeds clean
         ./scripts/feeds update -a
         # 添加UPX
         sudo apt-get install upx -y
         cp /usr/bin/upx staging_dir/host/bin
         cp /usr/bin/upx-ucl staging_dir/host/bin
         # 更新Goleng
         # pushd feeds/packages/lang
         # rm -rf golang && svn co https://github.com/openwrt/packages/branches/openwrt-21.02/lang/golang
         # popd
         ./scripts/feeds install -a

    - name: Import external feeds - alist
      working-directory: ./openwrt
      run: |
       git clone https://github.com/sbwml/luci-app-alist package/alist
       
    # - name: Import external feeds - passwall
    #   working-directory: ./openwrt
    #   run: |
    #    git clone https://github.com/xiaorouji/openwrt-passwall.git package/lienol
    #    git clone "your_github_link" package/"your_folder_name"      

    #- name: Import external feeds - JerryKuKu Argon
    #  working-directory: ./openwrt
    #  run: |
    #    git clone -b 18.06 https://github.com/jerrykuku/luci-theme-argon.git package/luci-theme-argon-jerrykuku

    - name: Configuration Customization - Build_x86_64
      env:
        CONFIG_FILE: 'x86_64_5.config'
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x ./customize.sh && ./customize.sh
        cd openwrt && make defconfig
        
    - name: Download package
      working-directory: ./openwrt
      run: |
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Build firmware
      working-directory: ./openwrt
      run: |
        echo -e "$(nproc) thread build."
        make V=s -j1

    - name : Upload artifact
      uses: actions/upload-artifact@master
      with:
        name: OpenWrt
        path: openwrt/bin
